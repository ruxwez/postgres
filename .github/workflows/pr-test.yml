name: PR - Build & Test Extensions

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: pr-build-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: PostgreSQL ${{ matrix.postgres_version }} / ${{ matrix.platform }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        postgres_version: ["18", "17", "17.6", "16", "16.10"]
        platform: ["linux/amd64"]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Build test image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: false
          load: true
          tags: postgres-test:${{ matrix.postgres_version }}
          build-args: |
            POSTGRES_VERSION=${{ matrix.postgres_version }}
            TEST_MODE=true
          cache-from: type=gha,scope=postgres-${{ matrix.postgres_version }}
          cache-to: type=gha,mode=max,scope=postgres-${{ matrix.postgres_version }}

      - name: Run extension tests
        timeout-minutes: 5
        run: |
          docker run --rm \
            -e POSTGRES_PASSWORD=testmode \
            postgres-test:${{ matrix.postgres_version }} \
            bash -c "docker-entrypoint.sh postgres & sleep 5 && until pg_isready -U postgres; do sleep 1; done && /usr/local/bin/installer --test-mode"

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: build-and-test
    if: always()

    steps:
      - name: Check results
        if: needs.build-and-test.result != 'success'
        run: exit 1
